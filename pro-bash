#! /usr/bin/bash

#awk '{print NR ": " $0}' script.sh > script_with_line_numbers.sh >> for line number
DB_PATH="./Database"

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
RESET='\033[0m'

print_header() {
  echo -e "${YELLOW}===============================${RESET}"
  echo -e "$1"
  echo -e "${YELLOW}===============================${RESET}"
}

error_message() {
  echo -e "${RED}Error: $1${RESET}"
}

success_message() {
  echo -e "${GREEN}$1${RESET}"
}

prompt_next_action() {

  echo "1. Previous Step"
  echo "2. Return to Main Menu"
  read -p "Enter your choice: " choice
  case $choice in
    1) $1 ;;
    2) main_menu ;;
    *) error_message "Invalid choice. Returning to Main Menu..." && main_menu ;;
  esac
}

validate_name() {
clear
  local trimmed_name="${1//[[:space:]]/}"

  if [[ -z "$trimmed_name" || "$1" =~ [^a-zA-Z0-9_] ]]; then
    error_message "Invalid name. Only alphanumeric characters and underscores are allowed. No spaces are permitted."
    return 1
  fi
  return 0
}


main_menu(){ 
 clear
if [ ! -d "$DB_PATH" ]; then
  error_message "Database Directory not found!"
  print_header "Do you want to:"
  echo "1. Create Database Directory in Current Location ($PWD)"
  echo "2. Specify a Custom Path"
  echo "3. Exit"
  echo -e "${YELLOW}===============================${RESET}"
  read -p "Enter your choice: " sub_choice
  clear
  case $sub_choice in
    1) mkdir -p "$DB_PATH" && success_message "Database Directory Created in $PWD!" ;;
    2) 
       read -p "Enter the path: " custom_path
       DB_PATH="$custom_path"
       mkdir -p "$DB_PATH" && success_message "Database Directory Created at $DB_PATH!" ;;
    3) exit ;;
    *) error_message "Invalid choice, exiting program..." && main_menu ;;
  esac
fi

  print_header "Bash Shell DBMS"
  echo "1. Create Database"
  echo "2. List Databases"
  echo "3. Connect to Database"
  echo "4. Drop Database"
  echo "5. Exit"
  echo -e "${YELLOW}===============================${RESET}"
  read -p "Enter your choice: " choice
  
  case $choice in
  1) clear; create_database ;;
  2) clear; list_databases ;;
  3) clear; connect_to_databse ;;
  4) clear; drop_database ;;
  5) exit ;;
  *) echo -e " ${RED}Invalid Choice, Please try again! ${RESET}"
     read -p "press [Enter] to return Menu" 
     main_menu ;;
  esac
  }


create_database(){
  print_header "Create Database"
  read -p "Enter Database Name: " db_name
  validate_name "$db_name" || create_database

  if [ -d "$DB_PATH/$db_name" ]; then
    error_message "Database '$db_name' already exists!"
  else
    mkdir -p "$DB_PATH/$db_name"
    success_message "Database '$db_name' created successfully!"
  fi
  
  echo "1. Create Another Database"
  echo "2. Main menu"
  echo -e "${YELLOW}===============================${RESET}"
  read -p "Enter your choice: " choice
  
  case $choice in
  1) clear; create_database ;;
  2) clear; main_menu ;;
  *) error_message "Invalid Choice, Please try again!" && main_menu ;;
  esac
   }
   
list_databases() {
clear
  print_header "Available Databases"
 if [ -z "$(ls -A "$DB_PATH" 2>/dev/null)" ]; then
    error_message "No Databases Found!"
  echo "1. Create Database"
  echo "2. Main menu"
  echo -e "${YELLOW}===============================${RESET}"
  read -p "Enter your choice: " choice
  
  case $choice in
  1) clear; create_database ;;
  2) clear; main_menu ;;
  esac
  
else
    echo -e "${GREEN}"
    ls "$DB_PATH"
    echo -e "${RESET}" 
  fi
  
  echo "1. Connect to Database"
  echo "2. Main menu"
  echo -e "${YELLOW}===============================${RESET}"
  read -p "Enter your choice: " choice
  
  case $choice in
  1) clear; connect_to_databse ;;
  2) clear; main_menu ;;
  esac
}

